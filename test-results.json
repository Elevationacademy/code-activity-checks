{"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":1,"numTotalTests":2,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1588567221320,"success":false,"testResults":[{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mExercise 1 › The query should contain at least 2 rows\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'queryResults' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 | \u001b[39m    it(\u001b[32m'The query should contain at least 2 rows'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 17 | \u001b[39m        expect(results\u001b[33m.\u001b[39mqueryResults\u001b[33m.\u001b[39mlength\u001b[33m,\u001b[39m \u001b[32m`Your query only returned ${results.queryResults.length} results`\u001b[39m)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m    it(\u001b[32m'The query should contain SELECT and not INSERT'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.queryResults (\u001b[2m\u001b[0m\u001b[36mexercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:17:24)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mExercise 1 › The query should contain SELECT and not INSERT\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'query' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m    it(\u001b[32m'The query should contain SELECT and not INSERT'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 21 | \u001b[39m        expect(results\u001b[33m.\u001b[39mquery\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m.\u001b[39mindexOf(\u001b[32m'select'\u001b[39m)\u001b[33m,\u001b[39m \u001b[32m\"You query did not contain a select statement\"\u001b[39m)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[33m-\u001b[39m\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                       \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.query (\u001b[2m\u001b[0m\u001b[36mexercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:21:24)\u001b[2m\u001b[22m\n","numFailingTests":2,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1588567223870,"start":1588567222609},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/exercises/ex-1.test.js","testResults":[{"ancestorTitles":["Exercise 1"],"duration":2,"failureMessages":["TypeError: Cannot read property 'queryResults' of undefined\n    at Object.queryResults (/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/exercises/ex-1.test.js:17:24)\n    at Object.asyncJestTest (/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"Exercise 1 The query should contain at least 2 rows","location":null,"numPassingAsserts":0,"status":"failed","title":"The query should contain at least 2 rows"},{"ancestorTitles":["Exercise 1"],"duration":1,"failureMessages":["TypeError: Cannot read property 'query' of undefined\n    at Object.query (/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/exercises/ex-1.test.js:21:24)\n    at Object.asyncJestTest (/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/talbronfer/Documents/Repos/js-basics-evaluation-solutions/node_modules/jest-jasmine2/build/queue_runner.js:87:41)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"],"fullName":"Exercise 1 The query should contain SELECT and not INSERT","location":null,"numPassingAsserts":0,"status":"failed","title":"The query should contain SELECT and not INSERT"}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}